{"version":3,"sources":["../../src/my-lib.service.ts","../../src/my-lib.component.ts","../../src/my-lib.module.ts"],"names":["MyLibService","prototype","load","of","factory","ɵfac","providedIn","MyLibComponent","ngOnInit","selectors","decls","vars","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","MyLibModule","imports","declarations","exports"],"mappings":"2WAGA,0BAQA,SAAAA,YACEA,EAAAC,UAAAC,KAAA,WACE,OAAOC,EAAAA,GAAG,2CAFDH,wCAAAA,EAAYI,QAAZJ,EAAYK,KAAAC,WAFX,0BCDZ,SAAAC,YAEAA,EAAAN,UAAAO,SAAA,mDAHWD,qCAAAA,EAAcE,UAAA,CAAA,CAAA,eAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,SAHbC,EAAAA,eAAAA,EAAAA,KAAGC,EAAAA,OAAAA,EAAAA,gCAA4BC,EAAAA,yCCO7C,6CAAaC,iEAAAA,IAAWC,QAAA,CAJb,uEAIED,EAAW,CAAAE,aAAA,CALPb,GAAcc,QAAA,CAGnBd","sourcesContent":["import { Component, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nexport class Customer {\n  id: string;\n  name: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyLibService {\n  load(): Observable<Customer[]> {\n    return of([]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-my-lib',\n  template: ` <p>my-lib works on live reload!</p> `,\n  styles: [],\n})\nexport class MyLibComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { NgModule } from '@angular/core';\nimport { MyLibComponent } from './my-lib.component';\n\n\n\n@NgModule({\n  declarations: [MyLibComponent],\n  imports: [\n  ],\n  exports: [MyLibComponent]\n})\nexport class MyLibModule { }\n"]}